<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace NBitcoin
{
<# foreach (string t in new []{ "Int32","Int64" }) { #>
	public class MedianFilter<#= t #> 
	{
		Queue<<#= t #>> vValues;
		Queue<<#= t #>> vSorted;
		uint nSize;

		public MedianFilter<#= t #>(uint size, <#= t #> initialValue)
		{
			nSize = size;
			vValues = new Queue<<#= t #>>((int)size);
			vValues.Enqueue(initialValue);
			vSorted = new Queue<<#= t #>>(vValues);
		}

		public <#= t #> Median
		{
			get
			{
				int size = vSorted.Count;
				if(size <= 0)
					throw new InvalidOperationException("size <= 0");

				var sortedList = vSorted.ToList();
				if(size % 2 == 1)
				{
					return sortedList[size / 2];
				}
				else // Even number of elements
				{
					return (sortedList[size / 2 - 1] + sortedList[size / 2]) / 2;
				}
			}
		}

		public void Input(<#= t #> value)
		{
			if(vValues.Count == nSize)
			{
				vValues.Dequeue();
			}
			vValues.Enqueue(value);
			vSorted = new Queue<<#= t #>>(vValues.OrderBy(o => o));
		}
	}
<# } #>
}